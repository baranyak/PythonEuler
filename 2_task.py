"""
https://projecteuler.net/problem=2
Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""

__author__ = 'mbaranyak'


def fibonacci_sequence(limit):
    sequence = [0, 1, 1]
    while sequence[-1] < limit:
        sequence.append(sequence[-1] + sequence[-2])
    return sequence


def fibonacci_recursive(number):
    if number == 0:
        return number
    elif number == 1:
        return number
    else:
        return fibonacci_recursive(number - 1) + fibonacci_recursive(number - 2)


if __name__ == '__main__':
    import time
    start_time = time.time()
    print(sum([x for x in fibonacci_sequence(40000000) if x % 2 == 0]))
    print("--- %s seconds ---" % (time.time() - start_time))
